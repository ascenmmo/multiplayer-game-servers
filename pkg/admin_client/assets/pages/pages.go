package pages

const Auth = "\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"ru\"\u003e\n\u003chead\u003e\n    \u003cmeta charset=\"UTF-8\"\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e\n    \u003ctitle\u003eАвторизация | ASCENMMO\u003c/title\u003e\n    \u003clink href=\"https://fonts.googleapis.com/css2?family=Dancing+Script:wght@700\u0026display=swap\" rel=\"stylesheet\"\u003e\n    \u003cstyle\u003e\n        body {\n            font-family: 'Arial', sans-serif;\n            padding: 20px;\n            background: linear-gradient(135deg, #2a2a2a, #1c1c1c);\n            color: #ffffff;\n            display: flex;\n            flex-direction: column;\n            line-height: 1.6;\n            min-height: 100vh;\n            margin-bottom: 100px;\n        }\n\n        header {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            padding: 20px;\n            background: rgba(0, 0, 0, 0.8);\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n            z-index: 1000;\n        }\n\n        header h1 {\n            margin: 0;\n            font-size: 24px;\n            font-family: 'Dancing Script', cursive; /* Курсивный шрифт для логотипа */\n            color: #00ff7f;\n            margin-left: 5%; /* Сдвиг логотипа на 10% влево */\n            text-decoration: none;\n        }\n\n        header nav {\n            display: flex;\n            gap: 20px;\n            margin-right: 5%;\n        }\n\n\n        header nav a {\n            color: #fff;\n            text-decoration: none;\n            padding: 10px 20px;\n            border: 2px solid #00ff7f;\n            border-radius: 5px;\n            transition: background 0.3s, color 0.3s;\n        }\n\n        header nav a:hover {\n            background: #00ff7f;\n            color: #1c1c1c;\n        }\n\n        #auth-section {\n            padding-top: 100px; /* Отступ сверху для фиксированного заголовка */\n            text-align: center;\n        }\n\n        h1 {\n            font-size: 36px;\n            color: #00ff7f;\n            margin-bottom: 20px;\n        }\n\n        h2 {\n            margin: 20px 0;\n            color: #00ff7f;\n        }\n\n        form {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n        }\n\n        input {\n            margin: 10px 0;\n            padding: 10px;\n            border: 2px solid #00ff7f;\n            border-radius: 5px;\n            width: 300px;\n            color: #fff;\n            background-color: #333;\n        }\n\n        button {\n            background: #00ff7f;\n            color: #1c1c1c;\n            border: none;\n            padding: 10px 20px;\n            border-radius: 5px;\n            font-size: 18px;\n            cursor: pointer;\n            transition: background 0.3s, transform 0.3s;\n        }\n\n        button:hover {\n            background: rgba(0, 255, 127, 0.8);\n            transform: scale(1.05);\n        }\n\n        .toggle-button {\n            margin-top: 20px;\n            background: transparent;\n            border: 2px solid #00ff7f;\n            color: #00ff7f;\n            padding: 10px 20px;\n            cursor: pointer;\n            transition: background 0.3s, color 0.3s;\n        }\n\n        .toggle-button:hover {\n            background: #00ff7f;\n            color: #1c1c1c;\n        }\n\n        footer {\n            position: fixed; /* Фиксируем футер внизу */\n            bottom: 0;\n            left: 0;\n            width: 100%;\n            text-align: center;\n            padding: 10px;\n            background-color: rgba(0, 0, 0, 0.8);\n        }\n\n    \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\u003cheader\u003e\n    \u003ca href=\"/\"\u003e \u003ch1\u003eASCENMMO\u003c/h1\u003e\u003c/a\u003e\n    \u003cnav\u003e\n        \u003ca href=\"/developer/doc\"\u003eДокументация\u003c/a\u003e\n    \u003c/nav\u003e\n\u003c/header\u003e\n\n\u003cdiv id=\"auth-section\"\u003e\n    \u003ch1\u003eАвторизация ASCENMMO\u003c/h1\u003e\n\n    \u003cdiv id=\"signin-form\" style=\"display: block;\"\u003e\n        \u003ch2\u003eВход\u003c/h2\u003e\n        \u003cform\u003e\n            \u003cinput type=\"email\" id=\"login-email\" placeholder=\"Email\" required /\u003e\n            \u003cinput type=\"password\" id=\"login-password\" placeholder=\"Пароль\" required /\u003e\n            \u003cbutton type=\"submit\"\u003eВойти\u003c/button\u003e\n        \u003c/form\u003e\n    \u003c/div\u003e\n\n    \u003cdiv id=\"signup-form\" style=\"display: none;\"\u003e\n        \u003ch2\u003eРегистрация\u003c/h2\u003e\n        \u003cform\u003e\n            \u003cinput type=\"text\" id=\"signup-nickname\" placeholder=\"Никнейм\" required /\u003e\n            \u003cinput type=\"email\" id=\"signup-email\" placeholder=\"Email\" required /\u003e\n            \u003cinput type=\"password\" id=\"signup-password\" placeholder=\"Пароль\" required /\u003e\n            \u003cbutton type=\"submit\"\u003eЗарегистрироваться\u003c/button\u003e\n        \u003c/form\u003e\n    \u003c/div\u003e\n\n    \u003cbutton class=\"toggle-button\" id=\"toggle-auth\" onclick=\"toggleForm()\"\u003eПереключиться на регистрацию\u003c/button\u003e\n\u003c/div\u003e\n\n\u003cfooter\u003e\n    \u003cp\u003e© 2024 Ascenmmo. Все права защищены.\u003c/p\u003e\n\u003c/footer\u003e\n\n\u003cscript\u003e\n    let isSignIn = true;\n    document.cookie = `token=; path=/`;\n    document.cookie = `refresh=; path=/`;\n\n    // Определяем домен и порт динамически\n    const backendUrl = `${window.location.origin}/api/v1/developers`;\n\n    // Функция для переключения форм (вход/регистрация)\n    function toggleForm() {\n        if (isSignIn) {\n            document.getElementById('signin-form').style.display = 'none';\n            document.getElementById('signup-form').style.display = 'block';\n            document.getElementById('toggle-auth').textContent = 'Переключиться на вход';\n        } else {\n            document.getElementById('signin-form').style.display = 'block';\n            document.getElementById('signup-form').style.display = 'none';\n            document.getElementById('toggle-auth').textContent = 'Переключиться на регистрацию';\n        }\n        isSignIn = !isSignIn;\n    }\n\n    // Авторизация\n    document.querySelector('#signin-form form').addEventListener('submit', async (e) =\u003e {\n        e.preventDefault();\n        const email = document.getElementById('login-email').value;\n        const password = document.getElementById('login-password').value;\n\n        // Используем динамически сформированный URL для обращения к бэкенду\n        const response = await fetch(`${backendUrl}/signIn`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                id: 1,\n                jsonrpc: \"2.0\",\n                params: { developer: { email, password } }\n            })\n        });\n\n        const result = await response.json();\n        if (result.result.token) {\n            document.cookie = `token=${result.result.token}; path=/`;\n            document.cookie = `refresh=${result.result.refresh}; path=/`;\n            window.location.href = '/admin/games';\n        } else {\n            alert('Ошибка авторизации!\\n' +\n                'Не верный логин или пароль');\n        }\n    });\n\n    // Регистрация\n    document.querySelector('#signup-form form').addEventListener('submit', async (e) =\u003e {\n        e.preventDefault();\n        const nickname = document.getElementById('signup-nickname').value;\n        const email = document.getElementById('signup-email').value;\n        const password = document.getElementById('signup-password').value;\n\n        const response = await fetch(`${backendUrl}/signUp`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                id: 1,\n                jsonrpc: \"2.0\",\n                params: { developer: { nickname, email, password } }\n            })\n        });\n\n        const result = await response.json();\n        if (result.result.token) {\n            document.cookie = `token=${result.result.token}; path=/`;\n            document.cookie = `refresh=${result.result.refresh}; path=/`;\n            window.location.href = '/admin/games';\n        } else {\n            alert('Ошибка регистрации!\\nПопробуйте поменять mail');\n        }\n    });\n\u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e\n"

const DeveloperInfo = "\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"ru\"\u003e\n\u003chead\u003e\n    \u003cmeta charset=\"UTF-8\"\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e\n    \u003clink href=\"https://fonts.googleapis.com/css2?family=Dancing+Script:wght@700\u0026display=swap\" rel=\"stylesheet\"\u003e\n    \u003ctitle\u003eИнформация о разработчике\u003c/title\u003e\n    \u003cstyle\u003e\n        body {\n            font-family: 'Arial', sans-serif;\n            margin: 0;\n            padding: 0;\n            background-color: #1c1c1c;\n            color: #fff;\n            line-height: 1.6;\n            display: flex;\n            flex-direction: column; /* Размещаем элементы в колонку */\n            justify-content: center; /* Центрируем по вертикали */\n            align-items: center; /* Центрируем по горизонтали */\n            min-height: 100vh; /* Занимаем минимальную высоту окна */\n            padding-bottom: 50px; /* Отступ для футера */\n        }\n\n        header {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            padding: 20px;\n            background: rgba(0, 0, 0, 0.8);\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n            transition: background 0.3s ease;\n            z-index: 1000;\n        }\n\n        header h1 {\n            margin: 0;\n            font-size: 24px;\n            font-family: 'Dancing Script', cursive;\n            color: #00ff7f;\n        }\n\n        header nav {\n            display: flex;\n            gap: 20px;\n            margin-right: 30px;\n        }\n\n        header nav a {\n            color: #fff;\n            text-decoration: none;\n            padding: 10px 20px;\n            border: 2px solid #00ff7f;\n            border-radius: 5px;\n            transition: background 0.3s, color 0.3s;\n        }\n\n        header nav a:hover {\n            background: #00ff7f;\n            color: #1c1c1c;\n        }\n\n        .box {\n            background-color: #333; /* Цвет фона бокса */\n            border-radius: 10px; /* Закругление углов */\n            padding: 20px; /* Отступы внутри бокса */\n            width: 600px; /* Ширина бокса */\n            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.5); /* Тень для бокса */\n            text-align: center;\n            margin-top: 60px; /* Отступ сверху для свободного места под фиксированным заголовком */\n        }\n\n        input[type=\"text\"], input[type=\"password\"] {\n            width: calc(100% - 20px); /* Учитываем отступы */\n            padding: 10px;\n            margin: 10px 0;\n            border-radius: 5px;\n            border: 2px solid #00ff7f;\n            background: rgba(255, 255, 255, 0.1);\n            color: #fff;\n            box-sizing: border-box; /* Учитываем отступы в ширине */\n        }\n\n        button {\n            background: #00ff7f;\n            color: #1c1c1c;\n            border: none;\n            padding: 10px 20px;\n            border-radius: 5px;\n            cursor: pointer;\n            transition: background 0.3s, transform 0.3s;\n            margin: 10px 0; /* Отступы между кнопками */\n            width: 100%; /* Заполняем весь доступный размер бокса */\n            box-sizing: border-box; /* Учитываем отступы в ширине */\n        }\n\n        button:hover {\n            background: rgba(0, 255, 127, 0.8);\n            transform: scale(1.05);\n        }\n\n        .error-message {\n            color: red;\n            display: none; /* Скрыто по умолчанию */\n        }\n\n\n\n        footer {\n            position: fixed; /* Фиксируем футер внизу */\n            bottom: 0;\n            left: 0;\n            width: 100%;\n            text-align: center;\n            padding: 10px;\n            background-color: rgba(0, 0, 0, 0.8);\n        }\n    \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\u003cheader\u003e\n    \u003ca href=\"/\"\u003e \u003ch1\u003eASCENMMO\u003c/h1\u003e\u003c/a\u003e\n    \u003cnav\u003e\n        \u003ca href=\"/developer/doc\"\u003eДокументация\u003c/a\u003e\n        \u003ca href=\"/admin/games\"\u003eМои игры\u003c/a\u003e\n    \u003c/nav\u003e\n\u003c/header\u003e\n\n\u003cdiv class=\"box\"\u003e \u003c!-- Добавляем контейнер с классом box --\u003e\n    \u003csection\u003e\n        \u003ch3\u003eИнформация о разработчике\u003c/h3\u003e\n        \u003cdiv id=\"developer-info\"\u003e\n            \u003cinput type=\"text\" id=\"email\" placeholder=\"Email\"\u003e\n            \u003cinput type=\"text\" id=\"nickname\" placeholder=\"Никнейм\"\u003e\n            \u003cinput type=\"password\" id=\"old-password\" placeholder=\"Старый пароль\"\u003e\n            \u003cinput type=\"password\" id=\"new-password\" placeholder=\"Новый пароль\"\u003e\n            \u003cbutton id=\"update-developer\"\u003eИзменить информацию\u003c/button\u003e\n            \u003cp class=\"error-message\" id=\"error-message\"\u003eОшибка при обновлении информации.\u003c/p\u003e\n        \u003c/div\u003e\n\n        \u003cbutton id=\"logout\"\u003eВыйти из админки\u003c/button\u003e \u003c!-- Кнопка выхода --\u003e\n    \u003c/section\u003e\n\u003c/div\u003e\n\n\u003cfooter\u003e\n    \u003cp\u003e© 2024 Ascenmmo. Все права защищены.\u003c/p\u003e\n\u003c/footer\u003e\n\n\u003cscript\u003e\n    document.addEventListener('DOMContentLoaded', () =\u003e {\n        const emailInput = document.getElementById('email');\n        const nicknameInput = document.getElementById('nickname');\n        const oldPasswordInput = document.getElementById('old-password');\n        const newPasswordInput = document.getElementById('new-password');\n        const updateDeveloperButton = document.getElementById('update-developer');\n        const logoutButton = document.getElementById('logout');\n        const errorMessage = document.getElementById('error-message');\n\n        const backendUrl = `${window.location.origin}/api/v1/developers`;\n\n        let isRetred = false;\n\n        const handleApiError = async (error, retryFunc) =\u003e {\n            console.error('Ошибка:', error);\n            if (error.message \u0026\u0026 error.message.includes('token')) {\n                await refreshToken(retryFunc);\n            } else {\n                alert(error.message);\n            }\n        };\n\n        const refreshToken = async (retryFunc) =\u003e {\n            const refreshToken = getCookie('refresh');\n            const token = getCookie('token');\n            if (isRetred) {\n                return;\n            }\n\n            isRetred = true;\n\n            try {\n                const response = await fetch(`${window.location.origin}/api/v1/developers/refreshToken`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Token': token,\n                        'RefreshToken': refreshToken\n                    },\n                    body: JSON.stringify({\n                        id: 1,\n                        jsonrpc: \"2.0\",\n                        params: {}\n                    })\n                });\n\n                if (!response.ok) throw new Error('Ошибка обновления токенов');\n\n                const data = await response.json();\n                if (data.result \u0026\u0026 data.result.newToken \u0026\u0026 data.result.newRefresh) {\n                    document.cookie = `token=${data.result.newToken}; path=/`;\n                    document.cookie = `refresh=${data.result.newRefresh}; path=/`;\n                    retryFunc();\n                } else {\n                    throw new Error('Ошибка обновления токенов');\n                }\n            } catch (error) {\n                console.error('Ошибка обновления токенов:', error);\n                window.location.href = '/admin/auth';  // Редирект на страницу аутентификации\n            }\n        };\n\n        const fetchDeveloperInfo = async () =\u003e {\n            try {\n                const response = await fetch(`${backendUrl}/getDeveloper`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Token': getCookie('token')\n                    },\n                    body: JSON.stringify({\n                        id: 1,\n                        jsonrpc: \"2.0\",\n                        params: {}\n                    })\n                });\n\n                if (!response.ok) throw new Error('Ошибка сети');\n\n                const data = await response.json();\n                if (data.result \u0026\u0026 data.result.developer) {\n                    emailInput.value = data.result.developer.email;\n                    nicknameInput.value = data.result.developer.nickname;\n                } else {\n                    if (data.error) {\n                        handleApiError(data.error, fetchDeveloperInfo);\n                    }\n                }\n            } catch (error) {\n                console.error('Ошибка:', error);\n                errorMessage.style.display = 'block'; // Показываем сообщение об ошибке\n            }\n        };\n\n        const updateDeveloperInfo = async () =\u003e {\n            try {\n                const response = await fetch(`${backendUrl}/updateDeveloper`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Token': getCookie('token')\n                    },\n                    body: JSON.stringify({\n                        id: 1,\n                        jsonrpc: \"2.0\",\n                        params: {\n                            developer: {\n                                email: emailInput.value,\n                                nickname: nicknameInput.value,\n                                password: oldPasswordInput.value,\n                                new_password: newPasswordInput.value,\n                            }\n                        }\n                    })\n                });\n\n                if (!response.ok) throw new Error('Ошибка сети');\n\n                const data = await response.json();\n                if (data.result) {\n                    alert('Информация успешно обновлена');\n                } else {\n                    if (data.error) {\n                        handleApiError(data.error, updateDeveloperInfo);\n                    }\n                }\n            } catch (error) {\n                console.error('Ошибка:', error);\n                errorMessage.style.display = 'block'; // Показываем сообщение об ошибке\n            }\n            fetchDeveloperInfo();\n        };\n\n        const getCookie = (name) =\u003e {\n            const parts = document.cookie.split(';');\n            for (let i = 0; i \u003c parts.length; i++) {\n                const part = parts[i].trim();\n                if (part.indexOf(name + '=') === 0) return part.split('=')[1];\n            }\n            return null;\n        };\n\n        updateDeveloperButton.addEventListener('click', updateDeveloperInfo);\n        logoutButton.addEventListener('click', () =\u003e {\n            document.cookie = 'token=; expires=Thu, 01 Jan 1970 00:00:01 GMT; path=/'; // Удаляем токен\n            document.cookie = 'refresh=; expires=Thu, 01 Jan 1970 00:00:01 GMT; path=/'; // Удаляем refresh токен\n            window.location.href = '/admin/auth'; // Редирект на страницу аутентификации\n        });\n\n        fetchDeveloperInfo(); // Запрашиваем информацию о разработчике\n    });\n\u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e\n"

const Docs = "\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"ru\"\u003e\n\u003chead\u003e\n    \u003cmeta charset=\"UTF-8\"\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e\n    \u003clink href=\"https://fonts.googleapis.com/css2?family=Dancing+Script:wght@700\u0026display=swap\" rel=\"stylesheet\"\u003e\n    \u003ctitle\u003eДокументация API\u003c/title\u003e\n    \u003cstyle\u003e\n        body {\n            font-family: 'Arial', sans-serif;\n            padding: 20px;\n            background: linear-gradient(135deg, #2a2a2a, #1c1c1c); /* Градиент фона */\n            color: #ffffff; /* Цвет текста */\n            display: flex;\n            flex-direction: column;\n            min-height: 100vh; /* Минимальная высота на весь экран */\n            margin-bottom: 100px;\n            margin-top: 100px;\n        }\n\n\n        header {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            padding: 20px;\n            background: rgba(0, 0, 0, 0.8);\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n            transition: background 0.3s ease;\n            z-index: 1000;\n        }\n\n        header h1 {\n            margin: 0;\n            font-size: 24px;\n            font-family: 'Dancing Script', cursive;\n            color: #00ff7f;\n            margin-left: 5%;\n            text-decoration: none;\n        }\n\n        header nav {\n            display: flex;\n            gap: 20px;\n            margin-right: 5%; /* Сдвиг кнопок на 10% вправо */\n        }\n\n        header nav a {\n            color: #fff;\n            text-decoration: none;\n            padding: 10px 20px;\n            border: 2px solid #00ff7f;\n            border-radius: 5px;\n            transition: background 0.3s, color 0.3s;\n        }\n\n        header nav a:hover {\n            background: #00ff7f;\n            color: #1c1c1c;\n        }\n\n        h1 {\n            color: #00ff7f; /* Яркий цвет заголовка */\n            text-align: center;\n            margin-bottom: 20px;\n            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5); /* Тень для заголовка */\n        }\n\n        .accordion {\n            background: #3a3a3a; /* Цвет фона аккордеона */\n            border-radius: 5px;\n            margin-bottom: 10px;\n            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.5); /* Тень для аккордеона */\n        }\n\n        .accordion-title {\n            padding: 15px;\n            cursor: pointer;\n            border-bottom: 1px solid #444; /* Углубленный цвет */\n            background: #4a4a4a; /* Цвет заголовка аккордеона */\n            font-weight: bold;\n            transition: background 0.3s, color 0.3s;\n        }\n\n        .accordion-title:hover {\n            background: #5a5a5a; /* Цвет при наведении на заголовок */\n            color: #00ff7f; /* Цвет текста при наведении */\n        }\n\n        .accordion-content {\n            display: none;\n            padding: 10px;\n            background: #2b2b2b; /* Цвет фона содержимого аккордеона */\n        }\n\n        .active {\n            background: #6a6a6a; /* Цвет активного заголовка */\n            color: #00ff7f; /* Цвет текста активного заголовка */\n        }\n\n        pre {\n            background: #1e1e1e; /* Цвет фона для блоков кода */\n            padding: 10px;\n            border: 1px solid #ccc;\n            border-radius: 3px;\n            overflow-x: auto;\n            color: #ffffff; /* Цвет текста в блоке кода */\n        }\n\n        h3, h4, h5 {\n            color: #ffffff; /* Цвет заголовков внутри аккордеона */\n        }\n\n        p {\n            color: #cccccc; /* Цвет обычного текста внутри аккордеона */\n        }\n\n        footer {\n            position: fixed; /* Фиксируем футер внизу */\n            bottom: 0;\n            left: 0;\n            width: 100%;\n            text-align: center;\n            padding: 10px;\n            background-color: rgba(0, 0, 0, 0.8);\n        }\n    \u003c/style\u003e\n\u003c/head\u003e\n\u003cheader\u003e\n    \u003ca href=\"/\"\u003e\u003ch1\u003eASCENMMO\u003c/h1\u003e\u003c/a\u003e\n    \u003cnav id=\"nav-links\"\u003e\n    \u003c/nav\u003e\n\u003c/header\u003e\n\u003cbody\u003e\n\u003ch1\u003eДокументация API\u003c/h1\u003e\n{{ range . }} \u003c!-- Обработка каждой категории --\u003e\n\u003cdiv class=\"accordion\"\u003e\n    \u003cdiv class=\"accordion-title\"\u003e{{ .CategoryTitle }}\u003c/div\u003e\n    \u003cdiv class=\"accordion-content\"\u003e\n        {{ range .DocStruct }} \u003c!-- Обработка каждого документа в категории --\u003e\n        \u003cdiv class=\"accordion\"\u003e\n            \u003cdiv class=\"accordion-title\"\u003e{{ .Title }}\u003c/div\u003e\n            \u003cdiv class=\"accordion-content\"\u003e\n                \u003cp\u003e{{ .Info }}\u003c/p\u003e\n                {{ if .DockLists }}\n                \u003ch5\u003eСписки структур документа:\u003c/h5\u003e\n                {{ range .DockLists }}\n                \u003ch3\u003e{{ .Title }}\u003c/h3\u003e\n                \u003cp\u003e{{ .Description }}\u003c/p\u003e\n                \u003ch5\u003eПуть запроса:\u003c/h5\u003e\n                \u003cpre\u003e{{ .RequestPath }}\u003c/pre\u003e\n                \u003ch5\u003eМетод:\u003c/h5\u003e\n                \u003cpre\u003e{{ .Method }}\u003c/pre\u003e\n                \u003ch5\u003eЗаголовки запроса:\u003c/h5\u003e\n                \u003cpre\u003e{{ .RequestHeader }}\u003c/pre\u003e\n                \u003ch5\u003eТело запроса:\u003c/h5\u003e\n                \u003cpre\u003e{{ .RequestBody }}\u003c/pre\u003e\n                \u003ch5\u003eИнформация о теле запроса:\u003c/h5\u003e\n                \u003cp\u003e{{ .RequestBodyInfo }}\u003c/p\u003e\n                \u003ch5\u003eОтвет:\u003c/h5\u003e\n                \u003cpre\u003e{{ .ResponseBody }}\u003c/pre\u003e\n                \u003ch5\u003eИнформация о ответе:\u003c/h5\u003e\n                \u003cp\u003e{{ .ResponseBodyInfo }}\u003c/p\u003e\n                {{ end }}\n                {{ else }}\n                \u003cp\u003eНет структур документа.\u003c/p\u003e\n                {{ end }}\n            \u003c/div\u003e\n        \u003c/div\u003e\n        {{ end }}\n\n        {{ if .DocErrorList }}\n        \u003ch5\u003eСписок ошибок:\u003c/h5\u003e\n        {{ range .DocErrorList }}\n        \u003cdiv class=\"accordion\"\u003e\n            \u003cdiv class=\"accordion-title\"\u003e{{ .Name }}\u003c/div\u003e\n            \u003cdiv class=\"accordion-content\"\u003e\n                \u003cp\u003e{{ .Description }}\u003c/p\u003e\n                \u003cpre\u003e{{ .Body }}\u003c/pre\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        {{ end }}\n        {{ else }}\n        \u003cp\u003eОшибки не найдены.\u003c/p\u003e\n        {{ end }}\n    \u003c/div\u003e\n\u003c/div\u003e\n{{ end }}\n\n\u003cfooter\u003e\n    \u003cp\u003e© 2024 Ascenmmo. Все права защищены.\u003c/p\u003e\n\u003c/footer\u003e\n\u003cscript\u003e\n    const titles = document.querySelectorAll('.accordion-title');\n    titles.forEach(title =\u003e {\n        title.addEventListener('click', function() {\n            this.classList.toggle('active');\n            const content = this.nextElementSibling;\n            content.style.display = content.style.display === 'block' ? 'none' : 'block';\n        });\n    });\n\n    function getCookie(name) {\n        let matches = document.cookie.match(new RegExp(\n            \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n        ));\n        return matches ? decodeURIComponent(matches[1]) : undefined;\n    }\n\n    // Проверяем наличие токенов в куках\n    const token = getCookie('token');\n    const refreshToken = getCookie('refresh');\n\n    // Получаем элемент навигации\n    const navLinks = document.getElementById('nav-links');\n\n    // В зависимости от наличия токенов, показываем соответствующие кнопки\n    if (token \u0026\u0026 refreshToken) {\n        navLinks.innerHTML = `\n            \u003ca href=\"/admin/games\"\u003eМои игры\u003c/a\u003e\n        `;\n    } else {\n        navLinks.innerHTML = `\n            \u003ca href=\"/admin/auth\"\u003eАвторизоваться\u003c/a\u003e\n        `;\n    }\n\u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e\n"

const GameCollection = "\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"ru\"\u003e\n\u003chead\u003e\n    \u003cmeta charset=\"UTF-8\"\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e\n    \u003clink href=\"https://fonts.googleapis.com/css2?family=Dancing+Script:wght@700\u0026display=swap\" rel=\"stylesheet\"\u003e\n    \u003ctitle\u003eКоллекция Игр\u003c/title\u003e\n    \u003cstyle\u003e\n        body {\n            font-family: 'Arial', sans-serif;\n            padding: 0;\n            background-color: #1c1c1c;\n            color: #fff;\n            line-height: 1.6;\n            margin-bottom: 100px;\n        }\n\n        header {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            padding: 20px;\n            background: rgba(0, 0, 0, 0.8);\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n            transition: background 0.3s ease;\n            z-index: 1000;\n        }\n\n        header h1 {\n            margin: 0;\n            font-size: 24px;\n            font-family: 'Dancing Script', cursive; /* Курсивный шрифт для логотипа */\n            color: #00ff7f;\n            margin-left: 5%; /* Сдвиг логотипа на 10% влево */\n            text-decoration: none;\n        }\n\n        header nav {\n            display: flex;\n            gap: 20px;\n            margin-right: 5%; /* Сдвиг кнопок на 5% вправо */\n        }\n\n        header nav a {\n            color: #fff;\n            text-decoration: none;\n            padding: 10px 20px;\n            border: 2px solid #00ff7f;\n            border-radius: 5px;\n            transition: background 0.3s, color 0.3s;\n        }\n\n        header nav a:hover {\n            background: #00ff7f;\n            color: #1c1c1c;\n        }\n\n        #games-collection {\n            padding: 80px 20px; /* Отступ для секции */\n            text-align: center;\n        }\n\n        #games-box {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            gap: 20px; /* Пробел между играми */\n        }\n\n        .game-item {\n            background: rgba(255, 255, 255, 0.1); /* Полупрозрачный фон */\n            border-radius: 10px;\n            padding: 20px;\n            max-width: 300px; /* Максимальная ширина для каждого элемента */\n            transition: transform 0.3s, box-shadow 0.3s;\n            cursor: pointer; /* Курсор в виде указателя */\n        }\n\n        .game-item:hover {\n            transform: scale(1.05); /* Увеличение при наведении */\n            box-shadow: 0 0 15px rgba(0, 255, 127, 0.5); /* Тень при наведении */\n        }\n\n        .button-container {\n            margin-top: 20px; /* Отступ сверху для кнопок */\n        }\n\n        button {\n            background: #00ff7f;\n            color: #1c1c1c;\n            border: none;\n            padding: 10px 20px;\n            border-radius: 5px;\n            cursor: pointer;\n            transition: background 0.3s, transform 0.3s;\n        }\n\n        button:hover {\n            background: rgba(0, 255, 127, 0.8); /* Легкое затемнение */\n            transform: scale(1.05);\n        }\n\n        footer {\n            position: fixed; /* Фиксируем футер внизу */\n            bottom: 0;\n            left: 0;\n            width: 100%;\n            text-align: center;\n            padding: 10px;\n            background-color: rgba(0, 0, 0, 0.8);\n        }\n\n    \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\u003cheader\u003e\n    \u003ca href=\"/\"\u003e \u003ch1\u003eASCENMMO\u003c/h1\u003e\u003c/a\u003e\n    \u003cnav\u003e\n        \u003ca href=\"/developer/doc\"\u003eДокументация\u003c/a\u003e\n        \u003ca href=\"/admin/info\"\u003eИнформация о разработчике\u003c/a\u003e\n    \u003c/nav\u003e\n\u003c/header\u003e\n\n\u003csection id=\"games-collection\"\u003e\n    \u003ch3\u003eКоллекция Игр\u003c/h3\u003e\n    \u003cdiv id=\"games-box\"\u003e\n        \u003c!-- Здесь будет отображаться список игр --\u003e\n    \u003c/div\u003e\n    \u003cdiv class=\"button-container\"\u003e\n        \u003cbutton id=\"add-game\"\u003eДобавить игру\u003c/button\u003e\n        \u003cbutton id=\"refresh-list\"\u003eОбновить список\u003c/button\u003e\n    \u003c/div\u003e\n    \u003cp id=\"error-message\" style=\"display:none;\"\u003eИгры не найдены.\u003c/p\u003e\n\u003c/section\u003e\n\n\u003cfooter\u003e\n    \u003cp\u003e© 2024 Ascenmmo. Все права защищены.\u003c/p\u003e\n\u003c/footer\u003e\n\n\u003cscript\u003e\n    document.addEventListener('DOMContentLoaded', () =\u003e {\n        const gamesBox = document.getElementById('games-box');\n        const errorMessage = document.getElementById('error-message');\n        const addGameButton = document.getElementById('add-game');\n        const refreshListButton = document.getElementById('refresh-list');\n        const developerInfoButton = document.getElementById('developer-info');\n\n        // Определяем базовый URL для бэкенда\n        const backendUrl = `${window.location.origin}/api/v1/devTools`;\n\n        let isRetred = false\n\n        const handleApiError = async (error, retryFunc) =\u003e {\n            console.error('Ошибка:', error);\n            if (error.message \u0026\u0026 error.message.includes('token')) {\n                await refreshToken(retryFunc);\n            }else{\n                alert(error.message);\n            }\n        };\n\n\n\n        const refreshToken = async (retryFunc) =\u003e {\n            const refreshToken = getCookie('refresh');\n            const token = getCookie('token');\n            if (isRetred) {\n                return\n            }\n\n            isRetred = true\n\n            try {\n                const response = await fetch(`${window.location.origin}/api/v1/developers/refreshToken`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Token': token,\n                        'RefreshToken': refreshToken\n                    },\n                    body: JSON.stringify({\n                        id: 1,\n                        jsonrpc: \"2.0\",\n                        params: {}\n                    })\n                });\n\n                if (!response.ok) throw new Error('Ошибка обновления токенов');\n\n                const data = await response.json();\n                if (data.result \u0026\u0026 data.result.newToken \u0026\u0026 data.result.newRefresh) {\n                    document.cookie = `token=${data.result.newToken}; path=/`;\n                    document.cookie = `refresh=${data.result.newRefresh}; path=/`;\n                    retryFunc()\n                } else {\n                    throw new Error('Ошибка обновления токенов');\n                }\n            } catch (error) {\n                console.error('Ошибка обновления токенов:', error);\n                window.location.href = '/admin/auth';  // Редирект на страницу аутентификации\n            }\n        };\n\n        const fetchGames = async () =\u003e {\n            try {\n                const response = await fetch(`${backendUrl}/getMyGames`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Token': getCookie('token') // Получаем токен из куки\n                    },\n                    body: JSON.stringify({\n                        id: 1,\n                        jsonrpc: \"2.0\",\n                        params: {}\n                    })\n                });\n\n                if (!response.ok) throw new Error('Ошибка сети');\n\n                const data = await response.json();\n                if (data.result \u0026\u0026 data.result.games.length \u003e 0) {\n                    errorMessage.style.display = 'none'; // Скрываем сообщение об ошибке\n                    renderGames(data.result.games);\n                } else {\n                    if (data.error) {\n                        handleApiError(data.error,fetchGames)\n                    }\n                    gamesBox.innerHTML = ''; // Очищаем контейнер с играми\n                    errorMessage.style.display = 'block'; // Показываем сообщение об ошибке\n                }\n            } catch (error) {\n                console.error('Ошибка:', error);\n                errorMessage.style.display = 'block'; // Показываем сообщение об ошибке\n            }\n        };\n\n        const renderGames = (games) =\u003e {\n            gamesBox.innerHTML = ''; // Очищаем контейнер перед добавлением новых игр\n            games.forEach(game =\u003e {\n                const gameItem = document.createElement('div');\n                gameItem.className = 'game-item';\n                gameItem.innerHTML = `\n                \u003ch4\u003e${game.name}\u003c/h4\u003e\n                \u003cp\u003eКоличество игроков: ${game.count_players}\u003c/p\u003e\n                \u003cp\u003eКоличество игроков онлайн: ${game.count_online}\u003c/p\u003e\n            `;\n                gameItem.onclick = () =\u003e {\n                    window.location.href = `game_info?gameID=${game.gameID}`; // Редирект на страницу с игрой\n                };\n                gamesBox.appendChild(gameItem);\n            });\n        };\n\n        const getCookie = (name) =\u003e {\n            const value = `; ${document.cookie}`;\n            const parts = value.split(`; ${name}=`);\n            if (parts.length === 2) return parts.pop().split(';').shift();\n        };\n\n        addGameButton.onclick = () =\u003e {\n            window.location.href = 'game_info'; // Редирект на страницу добавления игры\n        };\n\n        refreshListButton.onclick = fetchGames;\n\n        fetchGames();\n\n        developerInfoButton.onclick = () =\u003e {\n            window.location.href = 'developer-info';\n        };\n\n        // Первоначальный вызов для загрузки игр\n\n    });\n\n\u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e\n"

const GameConfig = "\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"ru\"\u003e\n\u003chead\u003e\n    \u003cmeta charset=\"UTF-8\"\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e\n    \u003clink href=\"https://fonts.googleapis.com/css2?family=Dancing+Script:wght@700\u0026display=swap\" rel=\"stylesheet\"\u003e\n    \u003ctitle\u003eКонфигурация Игры\u003c/title\u003e\n    \u003cstyle\u003e\n        /* Основные стили */\n        body {\n            font-family: 'Arial', sans-serif;\n            padding: 0;\n            background-color: #1c1c1c;\n            color: #fff;\n            line-height: 1.6;\n            margin-bottom: 100px;\n        }\n\n        header {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            padding: 20px;\n            background: rgba(0, 0, 0, 0.8);\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n            transition: background 0.3s ease;\n            z-index: 1000;\n        }\n\n        header h1 {\n            margin: 0;\n            font-size: 24px;\n            font-family: 'Dancing Script', cursive;\n            color: #00ff7f;\n            margin-left: 5%;\n            text-decoration: none;\n        }\n\n        header nav {\n            display: flex;\n            gap: 20px;\n            margin-right: 5%;\n        }\n\n        header nav a {\n            color: #fff;\n            text-decoration: none;\n            padding: 10px 20px;\n            border: 2px solid #00ff7f;\n            border-radius: 5px;\n            transition: background 0.3s, color 0.3s;\n        }\n\n        header nav a:hover {\n            background: #00ff7f;\n            color: #1c1c1c;\n        }\n\n        #config-section {\n            padding: 80px 20px;\n            display: flex;\n        }\n\n        #config-list {\n            width: 30%;\n            padding-right: 20px;\n        }\n\n        #config-description {\n            width: 70%;\n            border-left: 1px solid #00ff7f;\n            padding-left: 20px;\n        }\n\n        .config-item {\n            background: rgba(255, 255, 255, 0.1);\n            border-radius: 10px;\n            padding: 15px;\n            margin-bottom: 10px;\n            cursor: pointer;\n            transition: transform 0.3s, box-shadow 0.3s;\n        }\n\n        .config-item:hover {\n            transform: scale(1.05);\n            box-shadow: 0 0 15px rgba(0, 255, 127, 0.5);\n        }\n\n        .button-container {\n            margin-top: 20px;\n        }\n\n        button {\n            background: #00ff7f;\n            color: #1c1c1c;\n            border: none;\n            padding: 10px 20px;\n            border-radius: 5px;\n            cursor: pointer;\n            transition: background 0.3s, transform 0.3s;\n        }\n\n        button:hover {\n            background: rgba(0, 255, 127, 0.8);\n            transform: scale(1.05);\n        }\n\n        pre {\n            background: rgba(255, 255, 255, 0.1);\n            padding: 10px;\n            border-radius: 5px;\n            overflow-x: auto;\n        }\n\n        .config-form {\n            display: none;\n            margin-top: 20px;\n            background: rgba(255, 255, 255, 0.1);\n            padding: 15px;\n            border-radius: 10px;\n        }\n\n        .form-group {\n            margin-bottom: 15px;\n        }\n\n        .form-group label {\n            display: block;\n            margin-bottom: 5px;\n        }\n\n        .form-group input,\n        .form-group select {\n            width: 100%;\n            padding: 10px;\n            border: 1px solid #00ff7f;\n            border-radius: 5px;\n            background: rgba(255, 255, 255, 0.2);\n        }\n\n        footer {\n            position: fixed; /* Фиксируем футер внизу */\n            bottom: 0;\n            left: 0;\n            width: 100%;\n            text-align: center;\n            padding: 10px;\n            background-color: rgba(0, 0, 0, 0.8);\n        }\n    \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\u003cheader\u003e\n    \u003ca href=\"/\"\u003e\u003ch1\u003eASCENMMO\u003c/h1\u003e\u003c/a\u003e\n    \u003cnav\u003e\n        \u003ca href=\"/developer/doc\"\u003eДокументация\u003c/a\u003e\n        \u003ca href=\"/admin/info\"\u003eИнформация о разработчике\u003c/a\u003e\n        \u003ca href=\"/admin/games\"\u003eМои игры\u003c/a\u003e\n    \u003c/nav\u003e\n\u003c/header\u003e\n\n\u003csection id=\"config-section\"\u003e\n    \u003cdiv id=\"config-list\"\u003e\n        \u003ch3\u003eКонфигурации\u003c/h3\u003e\n        \u003cdiv id=\"configs-box\"\u003e\n            \u003c!-- Список конфигураций --\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"button-container\"\u003e\n            \u003cbutton id=\"add-config\"\u003eДобавить конфигурацию\u003c/button\u003e\n        \u003c/div\u003e\n        \u003cp id=\"error-message\" style=\"display:none;\"\u003eКонфигурации не найдены.\u003c/p\u003e\n    \u003c/div\u003e\n    \u003cdiv id=\"config-description\"\u003e\n        \u003ch3\u003eОписание Конфигурации\u003c/h3\u003e\n        \u003cpre id=\"config-json\"\u003e\n            \u003cbutton id=\"refresh-result\" style=\"margin: 10px; float: right;\"\u003eОбновить результат\u003c/button\u003e\n            Выберите конфигурацию, чтобы увидеть её описание.\n        \u003c/pre\u003e\n        \u003cdiv class=\"config-form\" id=\"config-form\"\u003e\n            \u003ch3\u003eДобавление Конфигурации\u003c/h3\u003e\n\n            \u003c!-- Выпадающий список действий --\u003e\n            \u003cdiv class=\"form-group\"\u003e\n                \u003clabel for=\"run_func\"\u003eВыберите действие:\u003c/label\u003e\n                \u003cselect id=\"run_func\"\u003e\n                    \u003coption value=\"btn1\"\u003eBtn1\u003c/option\u003e\n                    \u003coption value=\"btn2\"\u003eBtn2\u003c/option\u003e\n                    \u003coption value=\"btn3\"\u003eBtn3\u003c/option\u003e\n                    \u003coption value=\"btn4\"\u003eBtn4\u003c/option\u003e\n                    \u003coption value=\"btn5\"\u003eBtn5\u003c/option\u003e\n                \u003c/select\u003e\n            \u003c/div\u003e\n\n            \u003cdiv class=\"form-group\"\u003e\n                \u003clabel for=\"result_name\"\u003eИмя результата:\u003c/label\u003e\n                \u003cinput type=\"text\" id=\"result_name\" placeholder=\"Введите имя результата\"\u003e\n            \u003c/div\u003e\n            \u003cdiv class=\"form-group\"\u003e\n                \u003clabel for=\"result_type\"\u003eТип результата:\u003c/label\u003e\n                \u003cselect id=\"result_type\"\u003e\n                    \u003coption value=\"int\"\u003eInteger\u003c/option\u003e\n                    \u003coption value=\"string\"\u003eString\u003c/option\u003e\n                    \u003coption value=\"float\"\u003eFloat\u003c/option\u003e\n                \u003c/select\u003e\n            \u003c/div\u003e\n\n            \u003c!-- Параметры пары значений --\u003e\n            \u003cdiv id=\"pairs-container\"\u003e\n                \u003cdiv class=\"pair-fields\"\u003e\n                    \u003cdiv class=\"form-group\"\u003e\n                        \u003clabel for=\"param-column-name\"\u003eИмя столбца:\u003c/label\u003e\n                        \u003cinput type=\"text\" class=\"column-name\" placeholder=\"Введите имя столбца\"\u003e\n                    \u003c/div\u003e\n                    \u003cdiv class=\"form-group\"\u003e\n                        \u003clabel for=\"param-value-type\"\u003eТип значения:\u003c/label\u003e\n                        \u003cselect class=\"value-type\"\u003e\n                            \u003coption value=\"int\"\u003eInteger\u003c/option\u003e\n                            \u003coption value=\"float\"\u003eFloat\u003c/option\u003e\n                            \u003coption value=\"string\"\u003eString\u003c/option\u003e\n                        \u003c/select\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n            \u003cbutton id=\"add-pair\"\u003eДобавить пару\u003c/button\u003e\n\n            \u003c!-- Выбор типа сервера --\u003e\n            \u003cdiv class=\"form-group\"\u003e\n                \u003clabel for=\"use_on_server_type\"\u003eТип сервера:\u003c/label\u003e\n                \u003cselect id=\"use_on_server_type\"\u003e\n                    \u003coption value=\"UDP\"\u003eUDP\u003c/option\u003e\n                    \u003coption value=\"TCP\"\u003eTCP\u003c/option\u003e\n                    \u003coption value=\"WS\"\u003eWebSocket\u003c/option\u003e\n                \u003c/select\u003e\n            \u003c/div\u003e\n\n            \u003cbutton id=\"save-config\"\u003eСохранить\u003c/button\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/section\u003e\n\n\u003cfooter\u003e\n    \u003cp\u003e© 2024 Ascenmmo. Все права защищены.\u003c/p\u003e\n\u003c/footer\u003e\n\n\n\n\u003cscript\u003e\n    document.addEventListener('DOMContentLoaded', () =\u003e {\n        const configsBox = document.getElementById('configs-box');\n        const errorMessage = document.getElementById('error-message');\n        const addConfigButton = document.getElementById('add-config');\n        const configJson = document.getElementById('config-json');\n        const configForm = document.getElementById('config-form');\n        const saveConfigButton = document.getElementById('save-config');\n        const addPairButton = document.getElementById('add-pair');\n        const pairsContainer = document.getElementById('pairs-container');\n        const refreshResultButton = document.getElementById('refresh-result'); // Кнопка обновления результата\n        const urlParams = new URLSearchParams(window.location.search);\n        const gameID = urlParams.get('gameID'); // Получаем gameID из GET-параметра\n\n        const backendUrl = `${window.location.origin}/api/v1/devToolsGameConfigs/getGameConfig`;\n        const gameResultConfigUrl = `${window.location.origin}/api/v1/devToolsGameConfigs/getGameResultConfigPreview`;\n        let existingConfigs = []; // Массив для хранения текущих конфигураций\n\n        // Добавляем токен авторизации\n        let token = getCookie(\"token\");\n\n        let isRetred = false\n\n        const handleApiError = async (error, retryFunc) =\u003e {\n            console.error('Ошибка:', error);\n            if (error.message \u0026\u0026 error.message.includes('token')) {\n                await refreshToken(retryFunc);\n            }else{\n                alert(error.message);\n            }\n        };\n\n\n\n        const refreshToken = async (retryFunc) =\u003e {\n            const refreshToken = getCookie('refresh');\n            if (isRetred) {\n                return\n            }\n\n            isRetred = true\n\n            try {\n                const response = await fetch(`${window.location.origin}/api/v1/developers/refreshToken`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Token': token,\n                        'RefreshToken': refreshToken\n                    },\n                    body: JSON.stringify({\n                        id: 1,\n                        jsonrpc: \"2.0\",\n                        params: {}\n                    })\n                });\n\n                if (!response.ok) throw new Error('Ошибка обновления токенов');\n\n                const data = await response.json();\n                if (data.result \u0026\u0026 data.result.newToken \u0026\u0026 data.result.newRefresh) {\n                    document.cookie = `token=${data.result.newToken}; path=/`;\n                    document.cookie = `refresh=${data.result.newRefresh}; path=/`;\n                    retryFunc()\n                } else {\n                    throw new Error('Ошибка обновления токенов');\n                }\n            } catch (error) {\n                console.error('Ошибка обновления токенов:', error);\n                window.location.href = '/admin/auth';  // Редирект на страницу аутентификации\n            }\n            token = getCookie(\"token\")\n        };\n\n        // Получение текущих конфигураций\n        function fetchGameConfig() {\n            fetch(backendUrl, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Token': `${token}`\n                },\n                body: JSON.stringify({\n                    id: 1,\n                    jsonrpc: '2.0',\n                    params: {\n                        gameID: gameID\n                    }\n                })\n            })\n                .then(response =\u003e response.json())\n                .then(data =\u003e {\n                    if (data.error) {\n                        handleApiError(data.error, fetchGameConfig)\n                    }\n                    renderGameConfig(data)\n                })\n                .catch(err =\u003e {\n                    console.error('Error fetching configurations:', err);\n                });\n        }\n\n        // Получение результата конфигурации игры\n        function fetchGameResultConfigPreview() {\n            fetch(gameResultConfigUrl, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Token': `${token}`\n                },\n                body: JSON.stringify({\n                    id: 1,\n                    jsonrpc: '2.0',\n                    params: {\n                        gameID: gameID\n                    }\n                })\n            })\n                .then(response =\u003e response.json())\n                .then(data =\u003e {\n                    if (data.error) {\n                        handleApiError(data.error, fetchGameResultConfigPreview)\n                    }\n                    renderGameResultConfig(data)\n                })\n                .catch(err =\u003e {\n                    console.error('Error fetching game result config:', err);\n                });\n        }\n\n        // Отображение конфигураций\n        function renderGameConfig(data) {\n            if (!data.result || !data.result.configs || data.result.configs.sorting_config.length === 0) {\n                errorMessage.style.display = 'block';\n            } else {\n                errorMessage.style.display = 'none';\n                existingConfigs = data.result.configs.sorting_config; // Сохраняем текущие конфигурации\n                configsBox.innerHTML = ''; // Очищаем перед рендерингом\n\n                data.result.configs.sorting_config.forEach((config, index) =\u003e {\n                    const configItem = document.createElement('div');\n                    configItem.className = 'config-item';\n                    configItem.style.display = 'flex';\n                    configItem.style.alignItems = 'center'; // Выравнивание по центру\n\n                    // Кнопка для удаления конфигурации\n                    const deleteButton = document.createElement('button');\n                    deleteButton.textContent = 'X';\n                    deleteButton.style.marginRight = '10px'; // Отступ справа от кнопки\n                    deleteButton.style.backgroundColor = 'gray';\n                    deleteButton.style.color = '#fff';\n                    deleteButton.style.border = 'none';\n                    deleteButton.style.cursor = 'pointer';\n                    deleteButton.addEventListener('click', (e) =\u003e {\n                        e.stopPropagation(); // Чтобы не вызывалось событие клика на configItem\n                        deleteConfig(index);\n                    });\n\n                    configItem.appendChild(deleteButton); // Добавляем кнопку \"Удалить\" в элемент конфигурации\n                    configItem.appendChild(document.createTextNode(`${config.result_name}: ${config.name}`)); // Текст конфигурации\n\n                    configItem.addEventListener('click', () =\u003e {\n                        configJson.textContent = JSON.stringify(config, null, 2);\n                        configJson.appendChild(refreshResultButton);\n                    });\n                    configsBox.appendChild(configItem);\n                });\n            }\n        }\n\n        // Удаление конфигурации\n        function deleteConfig(index) {\n            existingConfigs.splice(index, 1); // Удаляем элемент по индексу\n            update(); // Обновляем конфигурации на сервере\n        }\n\n        // Отображение результата конфигурации игры\n        function renderGameResultConfig(data) {\n            if (!data.result || !data.result.gameResult) {\n                configJson.textContent = 'Нет данных для отображения.';\n                configJson.appendChild(refreshResultButton);\n                return;\n            }\n\n            const formattedJson = JSON.stringify(data.result.gameResult, null, 2);\n            configJson.textContent = formattedJson;\n            configJson.appendChild(refreshResultButton);\n        }\n\n        // Функция для обновления конфигураций на сервере\n        function update() {\n            const updatedConfigs = {\n                gameID: gameID,\n                sorting_config: existingConfigs\n            };\n\n            fetch(`${window.location.origin}/api/v1/devToolsGameConfigs/createOrUpdateConfig`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Token': `${token}`\n                },\n                body: JSON.stringify({\n                    id: 1,\n                    jsonrpc: '2.0',\n                    params: {\n                        configs: updatedConfigs\n                    }\n                })\n            })\n                .then(response =\u003e response.json())\n                .then(data =\u003e {\n                    if (data.error) {\n                        handleApiError(data.error, update)\n                    }\n                })\n                .catch(err =\u003e {\n\n                    console.error('Ошибка при отправке запроса:', err);\n                })\n                .finally(() =\u003e {\n                    fetchGameConfig(); // Обновляем конфигурации после обновления на сервере\n                });\n        }\n\n        // Инициализация\n        fetchGameConfig();\n        fetchGameResultConfigPreview();\n\n        // Обработчик для кнопки обновления результата\n        refreshResultButton.addEventListener('click', fetchGameResultConfigPreview);\n\n        addConfigButton.addEventListener('click', () =\u003e {\n            configForm.style.display = 'block';\n        });\n\n        saveConfigButton.addEventListener('click', () =\u003e {\n            const use_on_server_type = document.getElementById('use_on_server_type').value;\n            const name = document.getElementById('run_func').value;\n            const result_name = document.getElementById('result_name').value;\n            const result_type = document.getElementById('result_type').value;\n\n            // Собираем значения для параметров пар\n            const pairs = Array.from(document.getElementsByClassName('pair-fields')).map(pairField =\u003e {\n                const column_name = pairField.querySelector('.column-name').value;\n                const value_type = pairField.querySelector('.value-type').value;\n                return { column_name, value_type };\n            });\n\n            // Новая конфигурация\n            const newConfig = {\n                use_on_server_type: use_on_server_type,\n                name: name,\n                result_name: result_name,\n                result_type: result_type,\n                params: pairs\n            };\n\n            // Добавляем новую конфигурацию в массив existingConfigs\n            existingConfigs.push(newConfig);\n            update(); // Обновляем конфигурации на сервере после добавления\n        });\n\n        addPairButton.addEventListener('click', () =\u003e {\n            const newPair = document.createElement('div');\n            newPair.className = 'pair-fields';\n            newPair.innerHTML = `\n                \u003cdiv class=\"form-group\"\u003e\n                    \u003clabel for=\"param-column-name\"\u003eИмя столбца:\u003c/label\u003e\n                    \u003cinput type=\"text\" class=\"column-name\" placeholder=\"Введите имя столбца\"\u003e\n                \u003c/div\u003e\n                \u003cdiv class=\"form-group\"\u003e\n                    \u003clabel for=\"param-value-type\"\u003eТип значения:\u003c/label\u003e\n                    \u003cselect class=\"value-type\"\u003e\n                        \u003coption value=\"int\"\u003eInteger\u003c/option\u003e\n                        \u003coption value=\"float\"\u003eFloat\u003c/option\u003e\n                        \u003coption value=\"string\"\u003eString\u003c/option\u003e\n                    \u003c/select\u003e\n                \u003c/div\u003e\n            `;\n            pairsContainer.appendChild(newPair);\n        });\n\n        function getCookie(name) {\n            const matches = document.cookie.match(new RegExp(\n                \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n            ));\n            return matches ? decodeURIComponent(matches[1]) : undefined;\n        }\n    });\n\u003c/script\u003e\n\n\n\u003c/body\u003e\n\u003c/html\u003e\n"

const GameInfo = "\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"ru\"\u003e\n\u003chead\u003e\n    \u003cmeta charset=\"UTF-8\"\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e\n    \u003clink href=\"https://fonts.googleapis.com/css2?family=Dancing+Script:wght@700\u0026display=swap\" rel=\"stylesheet\"\u003e\n    \u003cscript src=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js\"\u003e\u003c/script\u003e\n    \u003ctitle\u003eИнформация об Игре\u003c/title\u003e\n    \u003cstyle\u003e\n        body {\n            font-family: 'Arial', sans-serif;\n            padding: 0;\n            background-color: #1c1c1c;\n            color: #fff;\n            line-height: 1.6;\n            margin-bottom: 100px;\n        }\n\n        header {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            padding: 20px;\n            background: rgba(0, 0, 0, 0.8);\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n            z-index: 1000;\n        }\n\n        header h1 {\n            margin: 0;\n            font-size: 24px;\n            font-family: 'Dancing Script', cursive; /* Курсивный шрифт для логотипа */\n            color: #00ff7f;\n            margin-left: 5%; /* Сдвиг логотипа на 10% влево */\n            text-decoration: none;\n        }\n\n        header nav {\n            display: flex;\n            gap: 20px;\n            margin-right: 5%;\n        }\n\n        header nav a {\n            color: #fff;\n            text-decoration: none;\n            padding: 10px 20px;\n            border: 2px solid #00ff7f;\n            border-radius: 5px;\n            transition: background 0.3s, color 0.3s;\n        }\n\n        header nav a:hover {\n            background: #00ff7f;\n            color: #1c1c1c;\n        }\n\n        .container {\n            display: flex;\n            height: 100vh;\n            padding-top: 80px;\n        }\n\n        #game-info,\n        #servers-box {\n            flex: 1;\n            background: rgba(255, 255, 255, 0.1);\n            border-radius: 10px;\n            position: relative;\n            overflow-y: auto;\n            border: 1px solid #ccc;\n            margin: 10px; /* Упрощение отступов */\n            box-sizing: border-box;\n        }\n\n        h4 {\n            margin: 20px; /* Отступы для заголовков */\n        }\n\n        pre {\n            background: #2e2e2e;\n            padding: 10px;\n            border-radius: 5px;\n            overflow: auto;\n            margin: 20px;\n        }\n\n\n        code {\n            color: #00ff7f;\n        }\n\n        .game-config,\n        .add-server-button,\n        button {\n            background: #00ff7f;\n            color: #1c1c1c;\n            border: none;\n            padding: 10px 15px;\n            border-radius: 5px;\n            cursor: pointer;\n            transition: background 0.3s, transform 0.3s;\n            margin-top: 10px; /* Отступ сверху для кнопок */\n            margin-left: 10px; /* Отступ сверху для кнопок */\n            margin-right: 10px; /* Отступ сверху для кнопок */\n        }\n\n        .game-config:hover,\n        .add-server-button:hover,\n        button:hover {\n            background: rgba(0, 255, 127, 0.8); /* Легкое затемнение */\n            transform: scale(1.05);\n        }\n\n        .server-item {\n            background: rgba(255, 255, 255, 0.1);\n            border-radius: 10px;\n            margin: 10px; /* Упрощение отступов */\n            border: 1px solid #ddd;\n            padding: 10px;\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            box-sizing: border-box;\n        }\n\n        .server-actions {\n            display: flex;\n            gap: 10px; /* Пробел между кнопками действий */\n        }\n\n        footer {\n            position: fixed; /* Фиксируем футер внизу */\n            bottom: 0;\n            left: 0;\n            width: 100%;\n            text-align: center;\n            padding: 10px;\n            background-color: rgba(0, 0, 0, 0.8);\n        }\n\n        /* Дополнительные стили для ввода */\n        input[type=\"text\"] {\n            width: calc(80%);\n            padding: 10px;\n            border: none;\n            border-radius: 5px;\n            background: rgba(255, 255, 255, 0.2);\n            color: #fff;\n            margin-left: 20px;\n            margin-right: 20px;\n        }\n\n        input[type=\"text\"]::placeholder {\n            color: #ccc; /* Цвет плейсхолдера */\n        }\n\n        .edit-game-name{\n            background: #2e2e2e;\n            padding: 10px;\n            border-radius: 5px;\n            overflow: auto;\n            margin: 20px;\n        }\n        /* Стили для кнопки \"Сохранить изменения\" */\n        .create-game,\n        .save-game {\n            background: #00ff7f;\n            color: #1c1c1c;\n            padding: 10px 20px;\n            border: none;\n            border-radius: 5px;\n            cursor: pointer;\n            transition: background 0.3s, transform 0.3s;\n            margin-left: 20px;\n            margin-right: 20px;\n        }\n\n        .create-game:hover,\n        .save-game:hover {\n            background: rgba(0, 255, 127, 0.8);\n            transform: scale(1.05);\n        }\n\n        .player-count,\n        .online-player-count,\n        .description-label {\n            margin-left: 20px;\n            margin-right: 20px;\n        }\n\n    \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\u003cheader\u003e\n    \u003ca href=\"/\"\u003e\u003ch1\u003eASCENMMO\u003c/h1\u003e\u003c/a\u003e\n    \u003cnav\u003e\n        \u003ca href=\"/developer/doc\"\u003eДокументация\u003c/a\u003e\n        \u003ca href=\"/admin/info\"\u003eИнформация о разработчике\u003c/a\u003e\n        \u003ca href=\"/admin/games\"\u003eМои игры\u003c/a\u003e\n    \u003c/nav\u003e\n\u003c/header\u003e\n\n\u003cdiv class=\"container\"\u003e\n    \u003csection id=\"game-info\"\u003e\n        \u003ch4\u003eИнформация об Игре\u003c/h4\u003e\n        \u003cdiv id=\"game-details\"\u003e\u003c/div\u003e\n        \u003cdiv id=\"new-game-container\" style=\"display:none;\"\u003e\n            \u003ch4\u003eСоздать новую игру\u003c/h4\u003e\n            \u003cinput type=\"text\" id=\"new-game-name\" placeholder=\"Введите имя игры\"/\u003e\n            \u003cbutton class=\"create-game\" id=\"create-game\"\u003eСоздать игру\u003c/button\u003e\n        \u003c/div\u003e\n    \u003c/section\u003e\n\n    \u003cdiv id=\"servers-box\"\u003e\n        \u003ch4\u003eСерверы\u003c/h4\u003e\n        \u003cbutton class=\"add-server-button\" id=\"add-server-button\"\u003eДобавить сервер\u003c/button\u003e\n        \u003cdiv id=\"servers-list\"\u003e\u003c/div\u003e\n    \u003c/div\u003e\n\n\u003c/div\u003e\n\n\u003cfooter\u003e\n    \u003cp\u003e© 2024 Ascenmmo. Все права защищены.\u003c/p\u003e\n\u003c/footer\u003e\n\n\u003cscript\u003e\n    document.addEventListener('DOMContentLoaded', () =\u003e {\n        const gameDetails = document.getElementById('game-details');\n        const newGameContainer = document.getElementById('new-game-container');\n        const serversList = document.getElementById('servers-list');\n\n        const urlParams = new URLSearchParams(window.location.search);\n        const gameID = urlParams.get('gameID');\n\n        let isRetred = false\n\n\n        const backendUrl = `${window.location.origin}/api/v1/devTools`;\n\n        let gameServers = []; // Хранит массив ID серверов игры\n\n        let deletingServerID = \"\"\n        let newServerName = \"\"\n        let newServerAddress = \"\"\n\n        const handleApiError = async (error, retryFunc) =\u003e {\n            console.error('Ошибка:', error);\n            if (error.message \u0026\u0026 error.message.includes('token')) {\n                await refreshToken(retryFunc);\n            } else {\n                alert(error.message);\n            }\n        };\n\n\n        const refreshToken = async (retryFunc) =\u003e {\n            const refreshToken = getCookie('refresh');\n            const token = getCookie('token');\n            if (isRetred) {\n                return\n            }\n\n            isRetred = true\n\n            try {\n                const response = await fetch(`${window.location.origin}/api/v1/developers/refreshToken`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Token': token,\n                        'RefreshToken': refreshToken\n                    },\n                    body: JSON.stringify({\n                        id: 1,\n                        jsonrpc: \"2.0\",\n                        params: {}\n                    })\n                });\n\n                if (!response.ok) throw new Error('Ошибка обновления токенов');\n\n                const data = await response.json();\n                if (data.result \u0026\u0026 data.result.newToken \u0026\u0026 data.result.newRefresh) {\n                    document.cookie = `token=${data.result.newToken}; path=/`;\n                    document.cookie = `refresh=${data.result.newRefresh}; path=/`;\n                    retryFunc()\n                } else {\n                    throw new Error('Ошибка обновления токенов');\n                }\n            } catch (error) {\n                console.error('Ошибка обновления токенов:', error);\n                window.location.href = '/admin/auth';  // Редирект на страницу аутентификации\n            }\n        };\n\n        const fetchGameInfo = async () =\u003e {\n            try {\n                const response = await fetch(`${backendUrl}/getGameByGameID`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Token': getCookie('token')\n                    },\n                    body: JSON.stringify({\n                        id: 1,\n                        jsonrpc: \"2.0\",\n                        params: {gameID}\n                    })\n                });\n\n                const data = await response.json();\n\n                if (data.result \u0026\u0026 data.result.game) {\n                    renderGameInfo(data.result.game);\n                    gameServers = data.result.game.servers; // Сохраняем массив серверов игры\n                    fetchServers(gameID);\n                }\n                if (data.error) {\n                    handleApiError(data.error, fetchGameInfo);\n                }\n            } catch (error) {\n                console.error('Ошибка:', error);\n                newGameContainer.style.display = 'block'; // Показываем контейнер для создания игры\n            }\n        };\n\n        const renderGameInfo = (game) =\u003e {\n            gameDetails.innerHTML = `\n            \u003ch4\u003e${game.name}\u003c/h4\u003e\n\n            \u003cdiv class=\"player-count\"\u003eКоличество игроков: ${game.count_players}\u003c/div\u003e\n            \u003cdiv class=\"online-player-count\"\u003eКоличество игроков онлайн: ${game.count_online}\u003c/div\u003e\n\u003c!--            \u003cdiv class=\"description-label\"\u003eОписание: ${game.description}\u003c/div\u003e--\u003e\n            \u003cinput type=\"text\" class=\"edit-game-name\" id=\"edit-game-name\" value=\"${game.name}\" /\u003e\n            \u003cpre\u003e\u003ccode class=\"gameID swhow\"\u003eGameID: \"${game.gameID}\"\u003c/code\u003e\u003c/pre\u003e\n\n            \u003cbutton class=\"save-game\" id=\"save-game\"\u003eСохранить изменения\u003c/button\u003e\n            \u003cbutton class=\"game-config\" id=\"game-config\"\u003eУдаленные процедуры\u003c/button\u003e\n            \u003cbutton class=\"game-annalists\" id=\"game-annalists\"\u003eАналитика\u003c/button\u003e\n\n        `;\n            document.getElementById('save-game').onclick = () =\u003e fetchUpdateGame();\n            document.getElementById('game-config').onclick = () =\u003e fetchGameConfigs();\n            document.getElementById('game-annalists').onclick = () =\u003e fetchGameAnnalists();\n        };\n\n        const fetchUpdateGame = async () =\u003e {\n            const newName = document.getElementById('edit-game-name').value;\n            try {\n                const response = await fetch(`${backendUrl}/updateGame`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Token': getCookie('token')\n                    },\n                    body: JSON.stringify({\n                        id: 1,\n                        jsonrpc: \"2.0\",\n                        params: {\n                            gameID,\n                            newGame: {name: newName}\n                        }\n                    })\n                });\n\n                const data = await response.json();\n                if (data.error) {\n                    handleApiError(data.error, fetchUpdateGame);\n                }\n\n                alert('Игра обновлена успешно!');\n            } catch (error) {\n                console.error('Ошибка:', error);\n            }\n        };\n\n        const fetchCreateGame = async () =\u003e {\n            const newName = document.getElementById('new-game-name').value;\n            try {\n                const response = await fetch(`${backendUrl}/createGame`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Token': getCookie('token')\n                    },\n                    body: JSON.stringify({\n                        id: 1,\n                        jsonrpc: \"2.0\",\n                        params: {\n                            gameID,\n                            game: {name: newName}\n                        }\n                    })\n                });\n\n                const data = await response.json();\n                if (data.error) {\n                    handleApiError(data.error, fetchCreateGame);\n                } else {\n                    const id = data.result.id\n                    window.location.href = `game_info?gameID=${id}`\n                    alert('Игра обновлена успешно!');\n                }\n            } catch (error) {\n                console.error('Ошибка:', error);\n            }\n        };\n\n        const fetchServers = async () =\u003e {\n            try {\n                const response = await fetch(`${window.location.origin}/api/v1/devToolsServer/getServers`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Token': getCookie('token')\n                    },\n                    body: JSON.stringify({\n                        id: 1,\n                        jsonrpc: \"2.0\",\n                        params: {}\n                    })\n                });\n\n\n                const data = await response.json();\n                if (data.error) {\n                    handleApiError(data.error, fetchServers);\n                }\n\n                renderServers(data.result.servers);\n            } catch (error) {\n                console.error('Ошибка:', error);\n            }\n        };\n\n        const renderServers = (servers) =\u003e {\n            serversList.innerHTML = '';\n            servers.forEach(server =\u003e {\n                const serverItem = document.createElement('div');\n                serverItem.className = 'server-item';\n                serverItem.innerHTML = `\n                \u003cp\u003eИмя: ${server.server_name}\u003c/p\u003e\n                \u003cp\u003eАдрес: ${server.address}\u003c/p\u003e\n                \u003cp\u003eТип: ${server.server_type}\u003c/p\u003e\n                \u003cp\u003eРегион: ${server.region}\u003c/p\u003e\n                \u003cdiv class=\"server-actions\"\u003e\n                    ${!server.ascenmmo_server ?\n                    `\u003cbutton class=\"delete-button\" data-server-id=\"${server.id}\"\u003eУдалить сервер\u003c/button\u003e` : ''}\n                    ${gameServers.includes(server.id) ?\n                    `\u003cbutton class=\"disconnect-button\" data-server-id=\"${server.id}\"\u003eОтключить сервер\u003c/button\u003e` :\n                    `\u003cbutton class=\"connect-button\" data-server-id=\"${server.id}\"\u003eПодключить сервер\u003c/button\u003e`}\n                \u003c/div\u003e\n            `;\n                serversList.appendChild(serverItem);\n            });\n        };\n\n        // Привязываем функции к глобальному объекту\n        window.connectServer = async (serverID, button) =\u003e {\n            try {\n                const response = await fetch(`${backendUrl}/turnOnServerInGame`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Token': getCookie('token')\n                    },\n                    body: JSON.stringify({\n                        id: 1,\n                        jsonrpc: \"2.0\",\n                        params: {\n                            gameId: gameID,\n                            serverID: serverID\n                        }\n                    })\n                });\n\n                if (!response.ok) throw new Error('Ошибка сети');\n\n                const data = await response.json();\n                console.log(`Сервер ${serverID} подключен!`, data);\n                // Изменяем текст кнопки на \"Отключить сервер\"\n                button.classList.remove('connect-button');\n                button.classList.add('disconnect-button');\n                button.textContent = 'Отключить сервер';\n            } catch (error) {\n                console.error('Ошибка подключения:', error);\n            }\n        };\n\n        window.disconnectServer = async (serverID, button) =\u003e {\n            try {\n                const response = await fetch(`${backendUrl}/turnOffServerInGame`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Token': getCookie('token')\n                    },\n                    body: JSON.stringify({\n                        id: 1,\n                        jsonrpc: \"2.0\",\n                        params: {\n                            gameId: gameID,\n                            serverID: serverID\n                        }\n                    })\n                });\n\n                if (!response.ok) throw new Error('Ошибка сети');\n\n                const data = await response.json();\n                console.log(`Сервер ${serverID} отключен!`, data);\n                // Изменяем текст кнопки на \"Подключить сервер\"\n                button.classList.remove('disconnect-button');\n                button.classList.add('connect-button');\n                button.textContent = 'Подключить сервер';\n            } catch (error) {\n                console.error('Ошибка отключения:', error);\n            }\n        };\n\n\n        const fetchCreateServer = async () =\u003e {\n            try {\n                const response = await fetch(`${window.location.origin}/api/v1/devToolsServer/addServer`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Token': getCookie('token')\n                    },\n                    body: JSON.stringify({\n                        id: 1,\n                        jsonrpc: \"2.0\",\n                        params: {\n                            address: newServerAddress,\n                            name: newServerName\n                        }\n                    })\n                });\n\n                if (!response.ok) throw new Error('Ошибка сети');\n                const data = await response.json();\n                if (data.error) {\n                    handleApiError(data.error, fetchCreateServer)\n                } else {\n                    fetchGameInfo()\n                }\n            } catch (error) {\n                console.error('Ошибка отключения:', error);\n            }\n        };\n\n        const fetchDeleteServer = async () =\u003e {\n            try {\n                const response = await fetch(`${window.location.origin}/api/v1/devToolsServer/deleteServers`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Token': getCookie('token')\n                    },\n                    body: JSON.stringify({\n                        id: 1,\n                        jsonrpc: \"2.0\",\n                        params: {serverID: deletingServerID}\n                    })\n                });\n\n                const data = await response.json();\n                if (data.error) {\n                    handleApiError(data.error, fetchDeleteServer)\n                } else {\n                    fetchGameInfo()\n                }\n\n            } catch (error) {\n                console.error('Ошибка:', error);\n                newGameContainer.style.display = 'block'; // Показываем контейнер для создания игры\n            }\n        };\n        const getCookie = (name) =\u003e {\n            const value = `; ${document.cookie}`;\n            const parts = value.split(`; ${name}=`);\n            if (parts.length === 2) return parts.pop().split(';').shift();\n        };\n\n        // Добавляем обработчик события для кнопки \"Добавить сервер\"\n        document.getElementById('add-server-button').onclick = () =\u003e {\n            const serverName = prompt('Введите имя сервера \\n ' +\n                'он будет отображаться в вашей админке:');\n\n            if (!serverName) {\n                return\n            }\n\n            const serverAddress = prompt('Введите адрес или доменное имя сервера\\n' +\n                'если вы используете не дефолтные порты подалуста введите по примеру\\n' +\n                'ascenmmo.com:8081 или 127.0.0.1:8080');\n\n            if (serverName \u0026\u0026 serverAddress) {\n                newServerAddress = serverAddress\n                newServerName = serverName\n                fetchCreateServer();\n                fetchGameInfo();\n            }\n        };\n\n        const deleteServer = (serverID) =\u003e {\n            deletingServerID = serverID;\n            fetchDeleteServer();\n        }\n\n        document.getElementById('create-game').onclick = () =\u003e {\n            fetchCreateGame();\n        };\n\n\n        const fetchGameConfigs = async () =\u003e {\n            window.location.href = `game_info/config?gameID=${gameID}`\n        }\n\n        const fetchGameAnnalists = async () =\u003e {\n            window.location.href = `game_info/annalists?gameID=${gameID}`\n        }\n\n        // Добавляем делегирование событий для кнопок\n        serversList.addEventListener('click', (event) =\u003e {\n            if (event.target.tagName === 'BUTTON') {\n                const button = event.target;\n                const serverID = button.getAttribute('data-server-id');\n\n                if (button.classList.contains('connect-button')) {\n                    connectServer(serverID, button);\n                } else if (button.classList.contains('disconnect-button')) {\n                    disconnectServer(serverID, button);\n                } else if (button.classList.contains('delete-button')) {\n                    deleteServer(serverID);\n                }\n            }\n        });\n\n        if (!gameID) {\n            newGameContainer.style.display = 'block'; // Показываем контейнер для создания новой игры\n        } else {\n            fetchGameInfo();\n        }\n    });\n\n\n\u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e\n"

const MainPage = "\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"ru\"\u003e\n\u003chead\u003e\n    \u003cmeta charset=\"UTF-8\"\u003e\n    \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e\n    \u003ctitle\u003eAscenmmo\u003c/title\u003e\n    \u003clink href=\"https://fonts.googleapis.com/css2?family=Dancing+Script:wght@700\u0026display=swap\" rel=\"stylesheet\"\u003e\n    \u003cstyle\u003e\n        body {\n            font-family: 'Arial', sans-serif;\n            margin: 0;\n            padding: 0;\n            background-color: #1c1c1c;\n            color: #fff;\n            line-height: 1.6;\n        }\n\n        header {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            padding: 20px;\n            background: rgba(0, 0, 0, 0.8);\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n            transition: background 0.3s ease;\n            z-index: 1000;\n        }\n\n        header h1 {\n            margin: 0;\n            font-size: 24px;\n            font-family: 'Dancing Script', cursive;\n            color: #00ff7f;\n            margin-left: 5%;\n            text-decoration: none;\n        }\n\n        header nav {\n            display: flex;\n            gap: 20px;\n            margin-right: 5%; /* Сдвиг кнопок на 10% вправо */\n        }\n\n        header nav a {\n            color: #fff;\n            text-decoration: none;\n            padding: 10px 20px;\n            border: 2px solid #00ff7f;\n            border-radius: 5px;\n            transition: background 0.3s, color 0.3s;\n        }\n\n        header nav a:hover {\n            background: #00ff7f;\n            color: #1c1c1c;\n        }\n\n        .hero {\n            height: 100vh; /* Высота экрана */\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            justify-content: center;\n            text-align: center;\n            color: #fff;\n            animation: fadeIn 1s ease-in;\n            width: 100%; /* Ширина на всю страницу */\n            position: relative; /* Для абсолютного позиционирования дочерних элементов */\n        }\n\n        @keyframes fadeIn {\n            from {\n                opacity: 0;\n            }\n            to {\n                opacity: 1;\n            }\n        }\n\n        .future-container {\n            position: absolute; /* Задать абсолютное позиционирование */\n            top: 0; /* Сдвиг вверх */\n            left: 0; /* Сдвиг влево */\n            background: #000; /* Черный фон */\n            width: 100%; /* Ширина на всю страницу */\n            height: 100%; /* Высота на всю страницу */\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            justify-content: center;\n            color: #fff;\n            text-align: center;\n        }\n\n        .future-container h2 {\n            font-size: 48px;\n            margin-bottom: 20px;\n        }\n\n        .future-container p {\n            font-size: 24px;\n            margin-bottom: 30px;\n        }\n\n        .button {\n            background: #00ff7f;\n            color: #1c1c1c;\n            border: none;\n            padding: 15px 30px;\n            border-radius: 5px;\n            font-size: 18px;\n            cursor: pointer;\n            transition: background 0.3s, transform 0.3s, box-shadow 0.3s;\n            width: 100%; /* Ширина кнопки на весь экран */\n            max-width: 300px; /* Максимальная ширина кнопки */\n            text-decoration: none;\n        }\n\n        .button:hover {\n            background: rgba(0, 255, 127, 0.8); /* Легкое затемнение */\n            transform: scale(1.05);\n            box-shadow: 0 0 20px rgba(0, 255, 127, 0.7);\n        }\n\n        section {\n            padding: 60px 20px;\n            text-align: center;\n            animation: fadeIn 1s ease-in;\n        }\n\n        h3 {\n            margin-bottom: 20px;\n            font-size: 36px;\n            color: #00ff7f;\n        }\n\n        p {\n            margin-bottom: 40px;\n            font-size: 18px;\n            max-width: 600px;\n            margin-left: auto;\n            margin-right: auto;\n        }\n\n        footer {\n            padding: 10px;\n            text-align: center;\n            background-color: rgba(0, 0, 0, 0.8);\n            position: relative;\n        }\n\n\n        .service-container {\n            display: flex;\n            justify-content: center;\n            gap: 20px; /* Пространство между элементами */\n            flex-wrap: wrap; /* Позволяет элементам оборачиваться на мобильных устройствах */\n            padding: 40px 20px; /* Отступы сверху и снизу */\n        }\n\n        .service-item {\n            background: rgba(255, 255, 255, 0.1); /* Полупрозрачный фон для контраста */\n            border-radius: 10px;\n            padding: 20px;\n            max-width: 300px; /* Максимальная ширина для каждого элемента */\n            transition: transform 0.3s, box-shadow 0.3s;\n        }\n\n        .service-item:hover {\n            transform: scale(1.05); /* Увеличение при наведении */\n            box-shadow: 0 0 15px rgba(0, 255, 127, 0.5); /* Тень при наведении */\n        }\n\n        .service-item h4 {\n            color: #00ff7f; /* Цвет заголовка */\n            margin-bottom: 10px; /* Отступ снизу */\n        }\n\n        .service-item p {\n            font-size: 16px; /* Размер текста */\n            color: #e0e0e0; /* Цвет текста для лучшего контраста */\n        }\n\n        #admin {\n            padding: 60px 20px;\n            text-align: center;\n            background: linear-gradient(135deg, #000000 30%, #3d3d3d 100%); /* Градиентный фон */\n            border-radius: 10px; /* Закругление углов */\n            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.5); /* Тень для глубины */\n            position: relative; /* Для позиционирования псевдоэлементов */\n            overflow: hidden; /* Скрытие переполненных элементов */\n            animation: fadeIn 1s ease-in; /* Появление */\n        }\n\n        #admin h3 {\n            margin-bottom: 20px;\n            font-size: 36px;\n            color: #00ff7f; /* Цвет заголовка */\n            animation: slideIn 0.5s ease; /* Анимация заголовка */\n        }\n\n        #admin p {\n            margin-bottom: 40px;\n            font-size: 20px; /* Увеличенный размер текста */\n            color: #e0e0e0; /* Цвет текста для лучшего контраста */\n        }\n\n        .download-section {\n            background: url('https://example.com/your-background-image.jpg') no-repeat center center/cover; /* Замените на ваше изображение */\n            padding: 60px 20px;\n            text-align: center;\n            color: #fff;\n            animation: fadeIn 1s ease-in; /* Анимация появления */\n            position: relative; /* Для абсолютного позиционирования внутренних элементов */\n            overflow: hidden; /* Скрыть элементы, выходящие за пределы секции */\n        }\n\n        .download-section::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            background: rgba(0, 0, 0, 0.5); /* Полупрозрачный черный фон для улучшения читаемости текста */\n            z-index: 1; /* Поместить под контентом */\n        }\n\n        .download-content {\n            position: relative; /* Для обеспечения правильного позиционирования текста и кнопки */\n            z-index: 2; /* Чтобы текст был выше фона */\n        }\n\n        .download-content h3 {\n            font-size: 36px;\n            margin-bottom: 20px;\n            animation: slideIn 0.5s ease-in-out; /* Анимация заголовка */\n        }\n\n        .download-content p {\n            font-size: 18px;\n            margin-bottom: 10px; /* Уменьшено расстояние между параграфами */\n            animation: fadeIn 1s ease-in-out; /* Анимация текста */\n        }\n\n        .info-text {\n            font-size: 16px;\n            font-weight: bold;\n            margin-bottom: 30px; /* Добавлено расстояние под информационным текстом */\n            color: #ffd700; /* Цвет текста для выделения */\n        }\n\n    \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n\u003cheader\u003e\n    \u003ca href=\"/\"\u003e\u003ch1\u003eASCENMMO\u003c/h1\u003e\u003c/a\u003e\n    \u003cnav id=\"nav-links\"\u003e\n    \u003c/nav\u003e\n\u003c/header\u003e\n\n\n\u003csection class=\"hero\"\u003e\n    \u003cdiv class=\"future-container\"\u003e\n        \u003ch2\u003eОткройте Будущее Кросс-Платформенных Игр\u003c/h2\u003e\n        \u003cp\u003eБесплатные и Мощные Решения для Разработчиков Игр\u003c/p\u003e\n        \u003cbutton class=\"button\" onclick=\"window.open('/admin/games');\"\u003eНачать Прямо Сейчас!\u003c/button\u003e\n    \u003c/div\u003e\n\u003c/section\u003e\n\n\n\u003csection id=\"about\"\u003e\n    \u003ch3\u003eЧто мы предлагаем?\u003c/h3\u003e\n    \u003cdiv class=\"service-container\"\u003e\n        \u003cdiv class=\"service-item\" onclick=\"window.open('https://github.com/ascenmmo/udp-server', '_blank');\"\u003e\n            \u003ch4\u003e🚀 UDP Service\u003c/h4\u003e\n            \u003cp\u003eИспытайте молниеносную передачу данных, которая повысит производительность вашей игры. Идеально подходит\n                для динамичных экшенов, наш UDP-сервис гарантирует, что ваши игроки останутся на связи и вовлечены без\n                задержек.\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"service-item\" onclick=\"window.open('https://github.com/ascenmmo/websocket-server', '_blank');\"\u003e\n            \u003ch4\u003e🌐 WebSocket Service\u003c/h4\u003e\n            \u003cp\u003eОживите вашу игру с помощью реального времени. Наш WebSocket-сервис позволяет мгновенно обновлять и\n                взаимодействовать, позволяя игрокам общаться, обмениваться и объединяться без задержек.\u003c/p\u003e\n        \u003c/div\u003e\n        \u003cdiv class=\"service-item\" onclick=\"window.open('https://github.com/ascenmmo/tcp-server', '_blank');\"\u003e\n            \u003ch4\u003e🔒 TCP Service\u003c/h4\u003e\n            \u003cp\u003eНаслаждайтесь надежным и прочным соединением, которое гарантирует целостность данных. Идеально подходит\n                для критически важных функций игры, наш TCP-сервис обеспечивает безопасность данных ваших игроков.\u003c/p\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\u003c/section\u003e\n\n\u003csection id=\"admin\"\u003e\n    \u003ch3\u003e🎮 Ваша игра, ваш контроль\u003c/h3\u003e\n    \u003cp\u003eПрисоединяйтесь к нашему сообществу разработчиков, зарегистрировавшись сегодня! С нашей интуитивно понятной\n        админкой вы можете легко добавить свою игру и получить уникальный ID.\u003c/p\u003e\n    \u003ca href=\"/admin/games\" class=\"button\"\u003eПерейти в админку\u003c/a\u003e\n\u003c/section\u003e\n\n\u003csection id=\"download\" class=\"download-section\"\u003e\n    \u003cdiv class=\"download-content\"\u003e\n        \u003ch3\u003eГотовы к запуску? 🚀\u003c/h3\u003e\n        \u003cp\u003eСкачайте нашу админку с GitHub и настройте её на своих серверах без усилий. Присоединяйтесь к нам в\n            формировании следующего поколения игр!\u003c/p\u003e\n        \u003cbutton class=\"button\" onclick=\"window.open('https://github.com/ascenmmo/multiplayer-game-servers', '_blank');\"\u003e\n            Скачать админку с GitHub\n        \u003c/button\u003e\n    \u003c/div\u003e\n\u003c/section\u003e\n\n\u003cfooter\u003e\n    \u003cp\u003e© 2024 Ascenmmo. Все права защищены.\u003c/p\u003e\n\u003c/footer\u003e\n\n\u003cscript\u003e\n    // Функция для получения куки по имени\n    function getCookie(name) {\n        let matches = document.cookie.match(new RegExp(\n            \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n        ));\n        return matches ? decodeURIComponent(matches[1]) : undefined;\n    }\n\n    // Проверяем наличие токенов в куках\n    const token = getCookie('token');\n    const refreshToken = getCookie('refresh');\n\n    // Получаем элемент навигации\n    const navLinks = document.getElementById('nav-links');\n\n    // В зависимости от наличия токенов, показываем соответствующие кнопки\n    if (token \u0026\u0026 refreshToken) {\n        navLinks.innerHTML = `\n            \u003ca href=\"/admin/games\"\u003eМои игры\u003c/a\u003e\n            \u003ca href=\"/developer/doc\"\u003eДокументация\u003c/a\u003e\n        `;\n    } else {\n        navLinks.innerHTML = `\n            \u003ca href=\"/admin/auth\"\u003eАвторизоваться\u003c/a\u003e\n            \u003ca href=\"/developer/doc\"\u003eДокументация\u003c/a\u003e\n        `;\n    }\n\u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e\n"
