// GENERATED BY 'T'ransport 'G'enerator. DO NOT EDIT.
package transport

import (
	"context"
	"github.com/ascenmmo/multiplayer-game-servers/pkg/multiplayer"
	"github.com/ascenmmo/multiplayer-game-servers/pkg/multiplayer/types"
	"github.com/google/uuid"
)

type serverDevToolsServer struct {
	svc           multiplayer.DevToolsServer
	addServer     DevToolsServerAddServer
	getServers    DevToolsServerGetServers
	deleteServers DevToolsServerDeleteServers
}

type MiddlewareSetDevToolsServer interface {
	Wrap(m MiddlewareDevToolsServer)
	WrapAddServer(m MiddlewareDevToolsServerAddServer)
	WrapGetServers(m MiddlewareDevToolsServerGetServers)
	WrapDeleteServers(m MiddlewareDevToolsServerDeleteServers)

	WithTrace()
	WithMetrics()
	WithLog()
}

func newServerDevToolsServer(svc multiplayer.DevToolsServer) *serverDevToolsServer {
	return &serverDevToolsServer{
		addServer:     svc.AddServer,
		deleteServers: svc.DeleteServers,
		getServers:    svc.GetServers,
		svc:           svc,
	}
}

func (srv *serverDevToolsServer) Wrap(m MiddlewareDevToolsServer) {
	srv.svc = m(srv.svc)
	srv.addServer = srv.svc.AddServer
	srv.getServers = srv.svc.GetServers
	srv.deleteServers = srv.svc.DeleteServers
}

func (srv *serverDevToolsServer) AddServer(ctx context.Context, token string, name string, address string) (err error) {
	return srv.addServer(ctx, token, name, address)
}

func (srv *serverDevToolsServer) GetServers(ctx context.Context, token string) (servers []types.Server, err error) {
	return srv.getServers(ctx, token)
}

func (srv *serverDevToolsServer) DeleteServers(ctx context.Context, token string, serverID uuid.UUID) (err error) {
	return srv.deleteServers(ctx, token, serverID)
}

func (srv *serverDevToolsServer) WrapAddServer(m MiddlewareDevToolsServerAddServer) {
	srv.addServer = m(srv.addServer)
}

func (srv *serverDevToolsServer) WrapGetServers(m MiddlewareDevToolsServerGetServers) {
	srv.getServers = m(srv.getServers)
}

func (srv *serverDevToolsServer) WrapDeleteServers(m MiddlewareDevToolsServerDeleteServers) {
	srv.deleteServers = m(srv.deleteServers)
}

func (srv *serverDevToolsServer) WithTrace() {
	srv.Wrap(traceMiddlewareDevToolsServer)
}

func (srv *serverDevToolsServer) WithMetrics() {
	srv.Wrap(metricsMiddlewareDevToolsServer)
}

func (srv *serverDevToolsServer) WithLog() {
	srv.Wrap(loggerMiddlewareDevToolsServer())
}
