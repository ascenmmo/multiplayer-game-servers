// GENERATED BY 'T'ransport 'G'enerator. DO NOT EDIT.
package transport

import (
	"github.com/ascenmmo/multiplayer-game-servers/pkg/multiplayer"
	"github.com/gofiber/fiber/v2"
)

type httpDevToolsGameConfigs struct {
	errorHandler     ErrorHandler
	maxBatchSize     int
	maxParallelBatch int
	svc              *serverDevToolsGameConfigs
	base             multiplayer.DevToolsGameConfigs
}

func NewDevToolsGameConfigs(svcDevToolsGameConfigs multiplayer.DevToolsGameConfigs) (srv *httpDevToolsGameConfigs) {

	srv = &httpDevToolsGameConfigs{
		base: svcDevToolsGameConfigs,
		svc:  newServerDevToolsGameConfigs(svcDevToolsGameConfigs),
	}
	return
}

func (http *httpDevToolsGameConfigs) Service() *serverDevToolsGameConfigs {
	return http.svc
}

func (http *httpDevToolsGameConfigs) WithLog() *httpDevToolsGameConfigs {
	http.svc.WithLog()
	return http
}

func (http *httpDevToolsGameConfigs) WithTrace() *httpDevToolsGameConfigs {
	http.svc.WithTrace()
	return http
}

func (http *httpDevToolsGameConfigs) WithMetrics() *httpDevToolsGameConfigs {
	http.svc.WithMetrics()
	return http
}

func (http *httpDevToolsGameConfigs) WithErrorHandler(handler ErrorHandler) *httpDevToolsGameConfigs {
	http.errorHandler = handler
	return http
}

func (http *httpDevToolsGameConfigs) SetRoutes(route *fiber.App) {
	route.Post("/api/v1/devToolsGameConfigs", http.serveBatch)
	route.Post("/api/v1/devToolsGameConfigs/createOrUpdateConfig", http.serveCreateOrUpdateConfig)
	route.Post("/api/v1/devToolsGameConfigs/getGameConfig", http.serveGetGameConfig)
}
