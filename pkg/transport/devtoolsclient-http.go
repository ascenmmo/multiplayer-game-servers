// GENERATED BY 'T'ransport 'G'enerator. DO NOT EDIT.
package transport

import (
	"github.com/ascenmmo/multiplayer-game-servers/pkg/multiplayer"
	"github.com/gofiber/fiber/v2"
)

type httpDevToolsClient struct {
	errorHandler     ErrorHandler
	maxBatchSize     int
	maxParallelBatch int
	svc              *serverDevToolsClient
	base             multiplayer.DevToolsClient
}

func NewDevToolsClient(svcDevToolsClient multiplayer.DevToolsClient) (srv *httpDevToolsClient) {

	srv = &httpDevToolsClient{
		base: svcDevToolsClient,
		svc:  newServerDevToolsClient(svcDevToolsClient),
	}
	return
}

func (http *httpDevToolsClient) Service() *serverDevToolsClient {
	return http.svc
}

func (http *httpDevToolsClient) WithLog() *httpDevToolsClient {
	http.svc.WithLog()
	return http
}

func (http *httpDevToolsClient) WithTrace() *httpDevToolsClient {
	http.svc.WithTrace()
	return http
}

func (http *httpDevToolsClient) WithMetrics() *httpDevToolsClient {
	http.svc.WithMetrics()
	return http
}

func (http *httpDevToolsClient) WithErrorHandler(handler ErrorHandler) *httpDevToolsClient {
	http.errorHandler = handler
	return http
}

func (http *httpDevToolsClient) SetRoutes(route *fiber.App) {
	route.Post("/api/v1/devToolsClient", http.serveBatch)
	route.Post("/api/v1/devToolsClient/signUp", http.serveSignUp)
	route.Post("/api/v1/devToolsClient/signIn", http.serveSignIn)
	route.Post("/api/v1/devToolsClient/refreshToken", http.serveRefreshToken)
	route.Post("/api/v1/devToolsClient/getClient", http.serveGetClient)
	route.Post("/api/v1/devToolsClient/updateClient", http.serveUpdateClient)
}
